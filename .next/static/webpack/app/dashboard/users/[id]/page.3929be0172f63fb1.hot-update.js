"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/users/[id]/page",{

/***/ "(app-pages-browser)/./hooks/use-usuario-detalle.ts":
/*!**************************************!*\
  !*** ./hooks/use-usuario-detalle.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useUsuarioDetalle: () => (/* binding */ useUsuarioDetalle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\nfunction useUsuarioDetalle(id) {\n    const [usuario, setUsuario] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://wcnqocyqtksxhthnquta.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndjbnFvY3lxdGtzeGh0aG5xdXRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY4Mzk0NjIsImV4cCI6MjA2MjQxNTQ2Mn0.pDQP3Yx1XU1Wh3AYGSKB8qlrPz8_5_wI4IhfjjLvtZg\");\n    const cargarUsuario = async ()=>{\n        try {\n            setLoading(true);\n            setError(null);\n            console.log('üîç Cargando usuario con ID:', id);\n            // Primero, obtener el usuario b√°sico\n            const { data: usuarioBasico, error: errorUsuario } = await supabase.from('usuarios').select('*').eq('id', id).single();\n            if (errorUsuario) {\n                console.error('‚ùå Error al obtener usuario b√°sico:', errorUsuario);\n                setError(\"Error al cargar usuario: \".concat(errorUsuario.message));\n                return;\n            }\n            console.log('‚úÖ Usuario b√°sico obtenido:', usuarioBasico);\n            // Luego, obtener los roles del usuario\n            const { data: usuarioRoles, error: errorRoles } = await supabase.from('usuario_roles').select('rol_id, usuario_id').eq('usuario_id', id);\n            if (errorRoles) {\n                console.error('‚ùå Error al obtener roles:', errorRoles);\n            // No fallamos aqu√≠, solo log del error\n            }\n            console.log('‚úÖ Roles obtenidos:', usuarioRoles);\n            // Obtener informaci√≥n de los roles del sistema\n            let rolesCompletos = [];\n            if (usuarioRoles && usuarioRoles.length > 0) {\n                const rolIds = usuarioRoles.map((ur)=>ur.rol_id);\n                const { data: rolesSistema, error: errorRolesSistema } = await supabase.from('roles_sistema').select('id, nombre_interno, nombre_visible').in('id', rolIds);\n                if (!errorRolesSistema && rolesSistema) {\n                    rolesCompletos = usuarioRoles.map((ur)=>({\n                            rol_id: ur.rol_id,\n                            usuario_id: ur.usuario_id,\n                            roles_sistema: rolesSistema.find((rs)=>rs.id === ur.rol_id)\n                        }));\n                    console.log('‚úÖ Roles del sistema obtenidos:', rolesCompletos);\n                }\n            }\n            // Obtener direcci√≥n si existe\n            let direccion = undefined;\n            if (usuarioBasico.direccion_id) {\n                const { data: dirData, error: errorDir } = await supabase.from('direcciones').select('*').eq('id', usuarioBasico.direccion_id).single();\n                if (!errorDir) {\n                    direccion = dirData;\n                    console.log('‚úÖ Direcci√≥n obtenida:', direccion);\n                }\n            }\n            // Obtener familia si existe\n            let familia = undefined;\n            if (usuarioBasico.familia_id) {\n                const { data: famData, error: errorFam } = await supabase.from('familias').select('*').eq('id', usuarioBasico.familia_id).single();\n                if (!errorFam) {\n                    familia = famData;\n                    console.log('‚úÖ Familia obtenida:', familia);\n                }\n            }\n            // Obtener ocupaci√≥n si existe\n            let ocupacion = undefined;\n            if (usuarioBasico.ocupacion_id) {\n                const { data: ocData, error: errorOc } = await supabase.from('ocupaciones').select('*').eq('id', usuarioBasico.ocupacion_id).single();\n                if (!errorOc) {\n                    ocupacion = ocData;\n                    console.log('‚úÖ Ocupaci√≥n obtenida:', ocupacion);\n                }\n            }\n            // Obtener profesi√≥n si existe\n            let profesion = undefined;\n            if (usuarioBasico.profesion_id) {\n                const { data: profData, error: errorProf } = await supabase.from('profesiones').select('*').eq('id', usuarioBasico.profesion_id).single();\n                if (!errorProf) {\n                    profesion = profData;\n                    console.log('‚úÖ Profesi√≥n obtenida:', profesion);\n                }\n            }\n            // Obtener relaciones familiares si existen\n            let relacionesFamiliares = undefined;\n            console.log('üîç Buscando relaciones familiares para usuario:', id);\n            // Buscar relaciones donde este usuario es usuario1 o usuario2\n            const { data: relaciones, error: errorRelaciones } = await supabase.from('relaciones_usuarios').select('id, tipo_relacion, es_principal, usuario1_id, usuario2_id').or(\"usuario1_id.eq.\".concat(id, \",usuario2_id.eq.\").concat(id));\n            console.log('üîç Consulta de relaciones:', {\n                relaciones,\n                errorRelaciones\n            });\n            if (!errorRelaciones && relaciones && relaciones.length > 0) {\n                console.log('‚úÖ Relaciones encontradas:', relaciones);\n                // Obtener los IDs de los usuarios relacionados\n                const idsRelacionados = relaciones.map((r)=>{\n                    const esUsuario1 = r.usuario1_id === id;\n                    const familiarId = esUsuario1 ? r.usuario2_id : r.usuario1_id;\n                    console.log(\"\\uD83D\\uDD0D Relaci\\xf3n: usuario1=\".concat(r.usuario1_id, \", usuario2=\").concat(r.usuario2_id, \", tipo=\").concat(r.tipo_relacion));\n                    console.log(\"\\uD83D\\uDD0D Usuario actual: \".concat(id, \", Familiar ID: \").concat(familiarId));\n                    return familiarId;\n                });\n                console.log('üîç IDs de usuarios relacionados:', idsRelacionados);\n                // Obtener informaci√≥n de los usuarios relacionados\n                const { data: usuariosFamiliares, error: errorUsuariosFamiliares } = await supabase.from('usuarios').select('*').in('id', idsRelacionados);\n                console.log('üîç Usuarios familiares obtenidos:', {\n                    usuariosFamiliares,\n                    errorUsuariosFamiliares\n                });\n                if (!errorUsuariosFamiliares && usuariosFamiliares) {\n                    relacionesFamiliares = relaciones.map((r)=>{\n                        const esUsuario1 = r.usuario1_id === id;\n                        const familiarId = esUsuario1 ? r.usuario2_id : r.usuario1_id;\n                        const familiar = usuariosFamiliares.find((uf)=>uf.id === familiarId);\n                        console.log(\"\\uD83D\\uDD0D Construyendo relaci\\xf3n:\", {\n                            relacionId: r.id,\n                            tipo: r.tipo_relacion,\n                            esPrincipal: r.es_principal,\n                            familiarId,\n                            familiarEncontrado: !!familiar,\n                            familiarNombre: familiar ? \"\".concat(familiar.nombre, \" \").concat(familiar.apellido) : 'NO ENCONTRADO',\n                            esUsuario1,\n                            usuarioActual: id,\n                            usuario1: r.usuario1_id,\n                            usuario2: r.usuario2_id\n                        });\n                        // Invertir la relaci√≥n si el usuario actual es usuario1_id\n                        let tipoRelacionMostrado = r.tipo_relacion;\n                        if (esUsuario1) {\n                            switch(r.tipo_relacion){\n                                case 'padre':\n                                    tipoRelacionMostrado = 'hijo';\n                                    break;\n                                case 'hijo':\n                                    tipoRelacionMostrado = 'padre';\n                                    break;\n                                case 'hermano':\n                                    tipoRelacionMostrado = 'hermano' // Los hermanos son rec√≠procos\n                                    ;\n                                    break;\n                                case 'tutor':\n                                    tipoRelacionMostrado = 'tutelado';\n                                    break;\n                            }\n                        }\n                        return {\n                            id: r.id,\n                            tipo_relacion: tipoRelacionMostrado,\n                            es_principal: r.es_principal,\n                            familiar: familiar,\n                            es_usuario1: esUsuario1,\n                            tipo_relacion_original: r.tipo_relacion // Para debug\n                        };\n                    }).filter((r)=>r.familiar) // Solo incluir relaciones con usuarios v√°lidos\n                    ;\n                    console.log('‚úÖ Relaciones familiares construidas:', relacionesFamiliares);\n                }\n            } else {\n                console.log('‚ÑπÔ∏è No se encontraron relaciones familiares o hubo error:', errorRelaciones);\n            }\n            // Construir el objeto completo del usuario\n            const usuarioCompleto = {\n                ...usuarioBasico,\n                usuario_roles: rolesCompletos,\n                direccion,\n                familia,\n                ocupacion,\n                profesion,\n                relaciones_familiares: relacionesFamiliares\n            };\n            console.log('‚úÖ Usuario completo construido:', usuarioCompleto);\n            setUsuario(usuarioCompleto);\n        } catch (err) {\n            console.error('‚ùå Error inesperado:', err);\n            setError('Error inesperado al cargar datos');\n        } finally{\n            setLoading(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useUsuarioDetalle.useEffect\": ()=>{\n            if (id) {\n                cargarUsuario();\n            }\n        }\n    }[\"useUsuarioDetalle.useEffect\"], [\n        id\n    ]);\n    return {\n        usuario,\n        loading,\n        error,\n        recargar: cargarUsuario\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZS11c3VhcmlvLWRldGFsbGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQztBQUNTO0FBZ0M3QyxTQUFTRyxrQkFBa0JDLEVBQVU7SUFDMUMsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUdOLCtDQUFRQSxDQUEwQjtJQUNoRSxNQUFNLENBQUNPLFNBQVNDLFdBQVcsR0FBR1IsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDUyxPQUFPQyxTQUFTLEdBQUdWLCtDQUFRQSxDQUFnQjtJQUVsRCxNQUFNVyxXQUFXVCxtRUFBWUEsQ0FDM0JVLDBDQUFvQyxFQUNwQ0Esa05BQXlDO0lBRzNDLE1BQU1JLGdCQUFnQjtRQUNwQixJQUFJO1lBQ0ZSLFdBQVc7WUFDWEUsU0FBUztZQUVUTyxRQUFRQyxHQUFHLENBQUMsK0JBQStCZDtZQUUzQyxxQ0FBcUM7WUFDckMsTUFBTSxFQUFFZSxNQUFNQyxhQUFhLEVBQUVYLE9BQU9ZLFlBQVksRUFBRSxHQUFHLE1BQU1WLFNBQ3hEVyxJQUFJLENBQUMsWUFDTEMsTUFBTSxDQUFDLEtBQ1BDLEVBQUUsQ0FBQyxNQUFNcEIsSUFDVHFCLE1BQU07WUFFVCxJQUFJSixjQUFjO2dCQUNoQkosUUFBUVIsS0FBSyxDQUFDLHNDQUFzQ1k7Z0JBQ3BEWCxTQUFTLDRCQUFpRCxPQUFyQlcsYUFBYUssT0FBTztnQkFDekQ7WUFDRjtZQUVBVCxRQUFRQyxHQUFHLENBQUMsOEJBQThCRTtZQUUxQyx1Q0FBdUM7WUFDdkMsTUFBTSxFQUFFRCxNQUFNUSxZQUFZLEVBQUVsQixPQUFPbUIsVUFBVSxFQUFFLEdBQUcsTUFBTWpCLFNBQ3JEVyxJQUFJLENBQUMsaUJBQ0xDLE1BQU0sQ0FBQyxzQkFDUEMsRUFBRSxDQUFDLGNBQWNwQjtZQUVwQixJQUFJd0IsWUFBWTtnQkFDZFgsUUFBUVIsS0FBSyxDQUFDLDZCQUE2Qm1CO1lBQzNDLHVDQUF1QztZQUN6QztZQUVBWCxRQUFRQyxHQUFHLENBQUMs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Q0FBK0M7O29CQUUxRXZELFFBQVFDLEdBQUcsQ0FBQyx3Q0FBd0N5QztnQkFDdEQ7WUFDRixPQUFPO2dCQUNMMUMsUUFBUUMsR0FBRyxDQUFDLDREQUE0RDJDO1lBQzFFO1lBRUEsMkNBQTJDO1lBQzNDLE1BQU00QixrQkFBb0M7Z0JBQ3hDLEdBQUdyRSxhQUFhO2dCQUNoQnNFLGVBQWU3RDtnQkFDZmE7Z0JBQ0FLO2dCQUNBSTtnQkFDQUk7Z0JBQ0FvQyx1QkFBdUJoQztZQUN6QjtZQUVBMUMsUUFBUUMsR0FBRyxDQUFDLGtDQUFrQ3VFO1lBQzlDbkYsV0FBV21GO1FBRWIsRUFBRSxPQUFPRyxLQUFLO1lBQ1ozRSxRQUFRUixLQUFLLENBQUMsdUJBQXVCbUY7WUFDckNsRixTQUFTO1FBQ1gsU0FBVTtZQUNSRixXQUFXO1FBQ2I7SUFDRjtJQUVBUCxnREFBU0E7dUNBQUM7WUFDUixJQUFJRyxJQUFJO2dCQUNOWTtZQUNGO1FBQ0Y7c0NBQUc7UUFBQ1o7S0FBRztJQUVQLE9BQU87UUFDTEM7UUFDQUU7UUFDQUU7UUFDQW9GLFVBQVU3RTtJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9pc2FhY3BhZXp6L0dsb2JhbCBDb25uZWN0L2hvb2tzL3VzZS11c3VhcmlvLWRldGFsbGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xuaW1wb3J0IHR5cGUgeyBEYXRhYmFzZSB9IGZyb20gJ0AvbGliL3N1cGFiYXNlL2RhdGFiYXNlLnR5cGVzJ1xuXG50eXBlIFVzdWFyaW8gPSBEYXRhYmFzZVtcInB1YmxpY1wiXVtcIlRhYmxlc1wiXVtcInVzdWFyaW9zXCJdW1wiUm93XCJdXG50eXBlIFVzdWFyaW9Sb2wgPSBEYXRhYmFzZVtcInB1YmxpY1wiXVtcIlRhYmxlc1wiXVtcInVzdWFyaW9fcm9sZXNcIl1bXCJSb3dcIl1cbnR5cGUgUm9sU2lzdGVtYSA9IERhdGFiYXNlW1wicHVibGljXCJdW1wiVGFibGVzXCJdW1wicm9sZXNfc2lzdGVtYVwiXVtcIlJvd1wiXVxudHlwZSBEaXJlY2Npb24gPSBEYXRhYmFzZVtcInB1YmxpY1wiXVtcIlRhYmxlc1wiXVtcImRpcmVjY2lvbmVzXCJdW1wiUm93XCJdXG50eXBlIEZhbWlsaWEgPSBEYXRhYmFzZVtcInB1YmxpY1wiXVtcIlRhYmxlc1wiXVtcImZhbWlsaWFzXCJdW1wiUm93XCJdXG50eXBlIE9jdXBhY2lvbiA9IERhdGFiYXNlW1wicHVibGljXCJdW1wiVGFibGVzXCJdW1wib2N1cGFjaW9uZXNcIl1bXCJSb3dcIl1cbnR5cGUgUHJvZmVzaW9uID0gRGF0YWJhc2VbXCJwdWJsaWNcIl1bXCJUYWJsZXNcIl1bXCJwcm9mZXNpb25lc1wiXVtcIlJvd1wiXVxudHlwZSBSZWxhY2lvblVzdWFyaW8gPSBEYXRhYmFzZVtcInB1YmxpY1wiXVtcIlRhYmxlc1wiXVtcInJlbGFjaW9uZXNfdXN1YXJpb3NcIl1bXCJSb3dcIl1cblxuZXhwb3J0IHR5cGUgVXN1YXJpb0RldGFsbGFkbyA9IFVzdWFyaW8gJiB7XG4gIHVzdWFyaW9fcm9sZXM/OiB7XG4gICAgcm9sX2lkOiBzdHJpbmdcbiAgICB1c3VhcmlvX2lkOiBzdHJpbmdcbiAgICByb2xlc19zaXN0ZW1hPzogUm9sU2lzdGVtYVxuICB9W11cbiAgZGlyZWNjaW9uPzogRGlyZWNjaW9uXG4gIGZhbWlsaWE/OiBGYW1pbGlhXG4gIG9jdXBhY2lvbj86IE9jdXBhY2lvblxuICBwcm9mZXNpb24/OiBQcm9mZXNpb25cbiAgcmVsYWNpb25lc19mYW1pbGlhcmVzPzoge1xuICAgIGlkOiBzdHJpbmdcbiAgICB0aXBvX3JlbGFjaW9uOiBEYXRhYmFzZVtcInB1YmxpY1wiXVtcIkVudW1zXCJdW1wiZW51bV90aXBvX3JlbGFjaW9uXCJdXG4gICAgZXNfcHJpbmNpcGFsOiBib29sZWFuIHwgbnVsbFxuICAgIGZhbWlsaWFyOiBVc3VhcmlvXG4gICAgZXNfdXN1YXJpbzE6IGJvb2xlYW4gLy8gUGFyYSBkZWJ1ZzogaW5kaWNhIHNpIGVsIHVzdWFyaW8gYWN0dWFsIGVzIHVzdWFyaW8xIGVuIGVzdGEgcmVsYWNpw7NuXG4gICAgdGlwb19yZWxhY2lvbl9vcmlnaW5hbDogRGF0YWJhc2VbXCJwdWJsaWNcIl1bXCJFbnVtc1wiXVtcImVudW1fdGlwb19yZWxhY2lvblwiXSAvLyBQYXJhIGRlYnVnOiB0aXBvIG9yaWdpbmFsIGRlIGxhIEJEXG4gIH1bXVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlVXN1YXJpb0RldGFsbGUoaWQ6IHN0cmluZykge1xuICBjb25zdCBbdXN1YXJpbywgc2V0VXN1YXJpb10gPSB1c2VTdGF0ZTxVc3VhcmlvRGV0YWxsYWRvIHwgbnVsbD4obnVsbClcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSlcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKVxuXG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50PERhdGFiYXNlPihcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIVxuICApXG5cbiAgY29uc3QgY2FyZ2FyVXN1YXJpbyA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgc2V0TG9hZGluZyh0cnVlKVxuICAgICAgc2V0RXJyb3IobnVsbClcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ/CflI0gQ2FyZ2FuZG8gdXN1YXJpbyBjb24gSUQ6JywgaWQpXG4gICAgICBcbiAgICAgIC8vIFByaW1lcm8sIG9idGVuZXIgZWwgdXN1YXJpbyBiw6FzaWNvXG4gICAgICBjb25zdCB7IGRhdGE6IHVzdWFyaW9CYXNpY28sIGVycm9yOiBlcnJvclVzdWFyaW8gfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCd1c3VhcmlvcycpXG4gICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAuZXEoJ2lkJywgaWQpXG4gICAgICAgIC5zaW5nbGUoKVxuXG4gICAgICBpZiAoZXJyb3JVc3VhcmlvKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBhbCBvYnRlbmVyIHVzdWFyaW8gYsOhc2ljbzonLCBlcnJvclVzdWFyaW8pXG4gICAgICAgIHNldEVycm9yKGBFcnJvciBhbCBjYXJnYXIgdXN1YXJpbzogJHtlcnJvclVzdWFyaW8ubWVzc2FnZX1gKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ+KchSBVc3VhcmlvIGLDoXNpY28gb2J0ZW5pZG86JywgdXN1YXJpb0Jhc2ljbylcblxuICAgICAgLy8gTHVlZ28sIG9idGVuZXIgbG9zIHJvbGVzIGRlbCB1c3VhcmlvXG4gICAgICBjb25zdCB7IGRhdGE6IHVzdWFyaW9Sb2xlcywgZXJyb3I6IGVycm9yUm9sZXMgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCd1c3VhcmlvX3JvbGVzJylcbiAgICAgICAgLnNlbGVjdCgncm9sX2lkLCB1c3VhcmlvX2lkJylcbiAgICAgICAgLmVxKCd1c3VhcmlvX2lkJywgaWQpXG5cbiAgICAgIGlmIChlcnJvclJvbGVzKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBhbCBvYnRlbmVyIHJvbGVzOicsIGVycm9yUm9sZXMpXG4gICAgICAgIC8vIE5vIGZhbGxhbW9zIGFxdcOtLCBzb2xvIGxvZyBkZWwgZXJyb3JcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ+KchSBSb2xlcyBvYnRlbmlkb3M6JywgdXN1YXJpb1JvbGVzKVxuXG4gICAgICAvLyBPYnRlbmVyIGluZm9ybWFjacOzbiBkZSBsb3Mgcm9sZXMgZGVsIHNpc3RlbWFcbiAgICAgIGxldCByb2xlc0NvbXBsZXRvczogeyByb2xfaWQ6IHN0cmluZzsgdXN1YXJpb19pZDogc3RyaW5nOyByb2xlc19zaXN0ZW1hPzogUm9sU2lzdGVtYSB9W10gPSBbXVxuICAgICAgaWYgKHVzdWFyaW9Sb2xlcyAmJiB1c3VhcmlvUm9sZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCByb2xJZHMgPSB1c3VhcmlvUm9sZXMubWFwKHVyID0+IHVyLnJvbF9pZClcbiAgICAgICAgY29uc3QgeyBkYXRhOiByb2xlc1Npc3RlbWEsIGVycm9yOiBlcnJvclJvbGVzU2lzdGVtYSB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSgncm9sZXNfc2lzdGVtYScpXG4gICAgICAgICAgLnNlbGVjdCgnaWQsIG5vbWJyZV9pbnRlcm5vLCBub21icmVfdmlzaWJsZScpXG4gICAgICAgICAgLmluKCdpZCcsIHJvbElkcylcblxuICAgICAgICBpZiAoIWVycm9yUm9sZXNTaXN0ZW1hICYmIHJvbGVzU2lzdGVtYSkge1xuICAgICAgICAgIHJvbGVzQ29tcGxldG9zID0gdXN1YXJpb1JvbGVzLm1hcCh1ciA9PiAoe1xuICAgICAgICAgICAgcm9sX2lkOiB1ci5yb2xfaWQsXG4gICAgICAgICAgICB1c3VhcmlvX2lkOiB1ci51c3VhcmlvX2lkLFxuICAgICAgICAgICAgcm9sZXNfc2lzdGVtYTogcm9sZXNTaXN0ZW1hLmZpbmQocnMgPT4gcnMuaWQgPT09IHVyLnJvbF9pZClcbiAgICAgICAgICB9KSlcbiAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIFJvbGVzIGRlbCBzaXN0ZW1hIG9idGVuaWRvczonLCByb2xlc0NvbXBsZXRvcylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPYnRlbmVyIGRpcmVjY2nDs24gc2kgZXhpc3RlXG4gICAgICBsZXQgZGlyZWNjaW9uOiBEaXJlY2Npb24gfCB1bmRlZmluZWQgPSB1bmRlZmluZWRcbiAgICAgIGlmICh1c3VhcmlvQmFzaWNvLmRpcmVjY2lvbl9pZCkge1xuICAgICAgICBjb25zdCB7IGRhdGE6IGRpckRhdGEsIGVycm9yOiBlcnJvckRpciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSgnZGlyZWNjaW9uZXMnKVxuICAgICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAgIC5lcSgnaWQnLCB1c3VhcmlvQmFzaWNvLmRpcmVjY2lvbl9pZClcbiAgICAgICAgICAuc2luZ2xlKClcbiAgICAgICAgXG4gICAgICAgIGlmICghZXJyb3JEaXIpIHtcbiAgICAgICAgICBkaXJlY2Npb24gPSBkaXJEYXRhXG4gICAgICAgICAgY29uc29sZS5sb2coJ+KchSBEaXJlY2Npw7NuIG9idGVuaWRhOicsIGRpcmVjY2lvbilcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPYnRlbmVyIGZhbWlsaWEgc2kgZXhpc3RlXG4gICAgICBsZXQgZmFtaWxpYTogRmFtaWxpYSB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZFxuICAgICAgaWYgKHVzdWFyaW9CYXNpY28uZmFtaWxpYV9pZCkge1xuICAgICAgICBjb25zdCB7IGRhdGE6IGZhbURhdGEsIGVycm9yOiBlcnJvckZhbSB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSgnZmFtaWxpYXMnKVxuICAgICAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgICAgIC5lcSgnaWQnLCB1c3VhcmlvQmFzaWNvLmZhbWlsaWFfaWQpXG4gICAgICAgICAgLnNpbmdsZSgpXG4gICAgICAgIFxuICAgICAgICBpZiAoIWVycm9yRmFtKSB7XG4gICAgICAgICAgZmFtaWxpYSA9IGZhbURhdGFcbiAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIEZhbWlsaWEgb2J0ZW5pZGE6JywgZmFtaWxpYSlcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPYnRlbmVyIG9jdXBhY2nDs24gc2kgZXhpc3RlXG4gICAgICBsZXQgb2N1cGFjaW9uOiBPY3VwYWNpb24gfCB1bmRlZmluZWQgPSB1bmRlZmluZWRcbiAgICAgIGlmICh1c3VhcmlvQmFzaWNvLm9jdXBhY2lvbl9pZCkge1xuICAgICAgICBjb25zdCB7IGRhdGE6IG9jRGF0YSwgZXJyb3I6IGVycm9yT2MgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgLmZyb20oJ29jdXBhY2lvbmVzJylcbiAgICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgICAuZXEoJ2lkJywgdXN1YXJpb0Jhc2ljby5vY3VwYWNpb25faWQpXG4gICAgICAgICAgLnNpbmdsZSgpXG4gICAgICAgIFxuICAgICAgICBpZiAoIWVycm9yT2MpIHtcbiAgICAgICAgICBvY3VwYWNpb24gPSBvY0RhdGFcbiAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIE9jdXBhY2nDs24gb2J0ZW5pZGE6Jywgb2N1cGFjaW9uKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIE9idGVuZXIgcHJvZmVzacOzbiBzaSBleGlzdGVcbiAgICAgIGxldCBwcm9mZXNpb246IFByb2Zlc2lvbiB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZFxuICAgICAgaWYgKHVzdWFyaW9CYXNpY28ucHJvZmVzaW9uX2lkKSB7XG4gICAgICAgIGNvbnN0IHsgZGF0YTogcHJvZkRhdGEsIGVycm9yOiBlcnJvclByb2YgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgLmZyb20oJ3Byb2Zlc2lvbmVzJylcbiAgICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgICAuZXEoJ2lkJywgdXN1YXJpb0Jhc2ljby5wcm9mZXNpb25faWQpXG4gICAgICAgICAgLnNpbmdsZSgpXG4gICAgICAgIFxuICAgICAgICBpZiAoIWVycm9yUHJvZikge1xuICAgICAgICAgIHByb2Zlc2lvbiA9IHByb2ZEYXRhXG4gICAgICAgICAgY29uc29sZS5sb2coJ+KchSBQcm9mZXNpw7NuIG9idGVuaWRhOicsIHByb2Zlc2lvbilcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPYnRlbmVyIHJlbGFjaW9uZXMgZmFtaWxpYXJlcyBzaSBleGlzdGVuXG4gICAgICBsZXQgcmVsYWNpb25lc0ZhbWlsaWFyZXM6IHtcbiAgICAgICAgaWQ6IHN0cmluZ1xuICAgICAgICB0aXBvX3JlbGFjaW9uOiBEYXRhYmFzZVtcInB1YmxpY1wiXVtcIkVudW1zXCJdW1wiZW51bV90aXBvX3JlbGFjaW9uXCJdXG4gICAgICAgIGVzX3ByaW5jaXBhbDogYm9vbGVhbiB8IG51bGxcbiAgICAgICAgZmFtaWxpYXI6IFVzdWFyaW9cbiAgICAgICAgZXNfdXN1YXJpbzE6IGJvb2xlYW4gLy8gUGFyYSBkZWJ1ZzogaW5kaWNhIHNpIGVsIHVzdWFyaW8gYWN0dWFsIGVzIHVzdWFyaW8xIGVuIGVzdGEgcmVsYWNpw7NuXG4gICAgICAgIHRpcG9fcmVsYWNpb25fb3JpZ2luYWw6IERhdGFiYXNlW1wicHVibGljXCJdW1wiRW51bXNcIl1bXCJlbnVtX3RpcG9fcmVsYWNpb25cIl0gLy8gUGFyYSBkZWJ1ZzogdGlwbyBvcmlnaW5hbCBkZSBsYSBCRFxuICAgICAgfVtdIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkXG5cbiAgICAgIGNvbnNvbGUubG9nKCfwn5SNIEJ1c2NhbmRvIHJlbGFjaW9uZXMgZmFtaWxpYXJlcyBwYXJhIHVzdWFyaW86JywgaWQpXG5cbiAgICAgIC8vIEJ1c2NhciByZWxhY2lvbmVzIGRvbmRlIGVzdGUgdXN1YXJpbyBlcyB1c3VhcmlvMSBvIHVzdWFyaW8yXG4gICAgICBjb25zdCB7IGRhdGE6IHJlbGFjaW9uZXMsIGVycm9yOiBlcnJvclJlbGFjaW9uZXMgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCdyZWxhY2lvbmVzX3VzdWFyaW9zJylcbiAgICAgICAgLnNlbGVjdCgnaWQsIHRpcG9fcmVsYWNpb24sIGVzX3ByaW5jaXBhbCwgdXN1YXJpbzFfaWQsIHVzdWFyaW8yX2lkJylcbiAgICAgICAgLm9yKGB1c3VhcmlvMV9pZC5lcS4ke2lkfSx1c3VhcmlvMl9pZC5lcS4ke2lkfWApXG5cbiAgICAgIGNvbnNvbGUubG9nKCfwn5SNIENvbnN1bHRhIGRlIHJlbGFjaW9uZXM6JywgeyByZWxhY2lvbmVzLCBlcnJvclJlbGFjaW9uZXMgfSlcblxuICAgICAgaWYgKCFlcnJvclJlbGFjaW9uZXMgJiYgcmVsYWNpb25lcyAmJiByZWxhY2lvbmVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+KchSBSZWxhY2lvbmVzIGVuY29udHJhZGFzOicsIHJlbGFjaW9uZXMpXG4gICAgICAgIFxuICAgICAgICAvLyBPYnRlbmVyIGxvcyBJRHMgZGUgbG9zIHVzdWFyaW9zIHJlbGFjaW9uYWRvc1xuICAgICAgICBjb25zdCBpZHNSZWxhY2lvbmFkb3MgPSByZWxhY2lvbmVzLm1hcChyID0+IHtcbiAgICAgICAgICBjb25zdCBlc1VzdWFyaW8xID0gci51c3VhcmlvMV9pZCA9PT0gaWRcbiAgICAgICAgICBjb25zdCBmYW1pbGlhcklkID0gZXNVc3VhcmlvMSA/IHIudXN1YXJpbzJfaWQgOiByLnVzdWFyaW8xX2lkXG4gICAgICAgICAgY29uc29sZS5sb2coYPCflI0gUmVsYWNpw7NuOiB1c3VhcmlvMT0ke3IudXN1YXJpbzFfaWR9LCB1c3VhcmlvMj0ke3IudXN1YXJpbzJfaWR9LCB0aXBvPSR7ci50aXBvX3JlbGFjaW9ufWApXG4gICAgICAgICAgY29uc29sZS5sb2coYPCflI0gVXN1YXJpbyBhY3R1YWw6ICR7aWR9LCBGYW1pbGlhciBJRDogJHtmYW1pbGlhcklkfWApXG4gICAgICAgICAgcmV0dXJuIGZhbWlsaWFySWRcbiAgICAgICAgfSlcblxuICAgICAgICBjb25zb2xlLmxvZygn8J+UjSBJRHMgZGUgdXN1YXJpb3MgcmVsYWNpb25hZG9zOicsIGlkc1JlbGFjaW9uYWRvcylcblxuICAgICAgICAvLyBPYnRlbmVyIGluZm9ybWFjacOzbiBkZSBsb3MgdXN1YXJpb3MgcmVsYWNpb25hZG9zXG4gICAgICAgIGNvbnN0IHsgZGF0YTogdXN1YXJpb3NGYW1pbGlhcmVzLCBlcnJvcjogZXJyb3JVc3Vhcmlvc0ZhbWlsaWFyZXMgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgLmZyb20oJ3VzdWFyaW9zJylcbiAgICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgICAuaW4oJ2lkJywgaWRzUmVsYWNpb25hZG9zKVxuXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFVzdWFyaW9zIGZhbWlsaWFyZXMgb2J0ZW5pZG9zOicsIHsgdXN1YXJpb3NGYW1pbGlhcmVzLCBlcnJvclVzdWFyaW9zRmFtaWxpYXJlcyB9KVxuXG4gICAgICAgIGlmICghZXJyb3JVc3Vhcmlvc0ZhbWlsaWFyZXMgJiYgdXN1YXJpb3NGYW1pbGlhcmVzKSB7XG4gICAgICAgICAgcmVsYWNpb25lc0ZhbWlsaWFyZXMgPSByZWxhY2lvbmVzLm1hcChyID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGVzVXN1YXJpbzEgPSByLnVzdWFyaW8xX2lkID09PSBpZFxuICAgICAgICAgICAgY29uc3QgZmFtaWxpYXJJZCA9IGVzVXN1YXJpbzEgPyByLnVzdWFyaW8yX2lkIDogci51c3VhcmlvMV9pZFxuICAgICAgICAgICAgY29uc3QgZmFtaWxpYXIgPSB1c3Vhcmlvc0ZhbWlsaWFyZXMuZmluZCh1ZiA9PiB1Zi5pZCA9PT0gZmFtaWxpYXJJZClcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc29sZS5sb2coYPCflI0gQ29uc3RydXllbmRvIHJlbGFjacOzbjpgLCB7XG4gICAgICAgICAgICAgIHJlbGFjaW9uSWQ6IHIuaWQsXG4gICAgICAgICAgICAgIHRpcG86IHIudGlwb19yZWxhY2lvbixcbiAgICAgICAgICAgICAgZXNQcmluY2lwYWw6IHIuZXNfcHJpbmNpcGFsLFxuICAgICAgICAgICAgICBmYW1pbGlhcklkLFxuICAgICAgICAgICAgICBmYW1pbGlhckVuY29udHJhZG86ICEhZmFtaWxpYXIsXG4gICAgICAgICAgICAgIGZhbWlsaWFyTm9tYnJlOiBmYW1pbGlhciA/IGAke2ZhbWlsaWFyLm5vbWJyZX0gJHtmYW1pbGlhci5hcGVsbGlkb31gIDogJ05PIEVOQ09OVFJBRE8nLFxuICAgICAgICAgICAgICBlc1VzdWFyaW8xLFxuICAgICAgICAgICAgICB1c3VhcmlvQWN0dWFsOiBpZCxcbiAgICAgICAgICAgICAgdXN1YXJpbzE6IHIudXN1YXJpbzFfaWQsXG4gICAgICAgICAgICAgIHVzdWFyaW8yOiByLnVzdWFyaW8yX2lkXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBJbnZlcnRpciBsYSByZWxhY2nDs24gc2kgZWwgdXN1YXJpbyBhY3R1YWwgZXMgdXN1YXJpbzFfaWRcbiAgICAgICAgICAgIGxldCB0aXBvUmVsYWNpb25Nb3N0cmFkbyA9IHIudGlwb19yZWxhY2lvblxuICAgICAgICAgICAgaWYgKGVzVXN1YXJpbzEpIHtcbiAgICAgICAgICAgICAgc3dpdGNoIChyLnRpcG9fcmVsYWNpb24pIHtcbiAgICAgICAgICAgICAgICBjYXNlICdwYWRyZSc6XG4gICAgICAgICAgICAgICAgICB0aXBvUmVsYWNpb25Nb3N0cmFkbyA9ICdoaWpvJyBhcyBhbnlcbiAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSAnaGlqbyc6XG4gICAgICAgICAgICAgICAgICB0aXBvUmVsYWNpb25Nb3N0cmFkbyA9ICdwYWRyZScgYXMgYW55XG4gICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgJ2hlcm1hbm8nOlxuICAgICAgICAgICAgICAgICAgdGlwb1JlbGFjaW9uTW9zdHJhZG8gPSAnaGVybWFubycgYXMgYW55IC8vIExvcyBoZXJtYW5vcyBzb24gcmVjw61wcm9jb3NcbiAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSAndHV0b3InOlxuICAgICAgICAgICAgICAgICAgdGlwb1JlbGFjaW9uTW9zdHJhZG8gPSAndHV0ZWxhZG8nIGFzIGFueVxuICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICAvLyAnY29ueXVnZScgc2UgbWFudGllbmUgaWd1YWwgKGVzIHJlY8OtcHJvY28pXG4gICAgICAgICAgICAgICAgLy8gJ290cm9fZmFtaWxpYXInIHNlIG1hbnRpZW5lIGlndWFsXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgaWQ6IHIuaWQsXG4gICAgICAgICAgICAgIHRpcG9fcmVsYWNpb246IHRpcG9SZWxhY2lvbk1vc3RyYWRvLFxuICAgICAgICAgICAgICBlc19wcmluY2lwYWw6IHIuZXNfcHJpbmNpcGFsLFxuICAgICAgICAgICAgICBmYW1pbGlhcjogZmFtaWxpYXIhLFxuICAgICAgICAgICAgICBlc191c3VhcmlvMTogZXNVc3VhcmlvMSwgLy8gUGFyYSBkZWJ1Z1xuICAgICAgICAgICAgICB0aXBvX3JlbGFjaW9uX29yaWdpbmFsOiByLnRpcG9fcmVsYWNpb24gLy8gUGFyYSBkZWJ1Z1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLmZpbHRlcihyID0+IHIuZmFtaWxpYXIpIC8vIFNvbG8gaW5jbHVpciByZWxhY2lvbmVzIGNvbiB1c3VhcmlvcyB2w6FsaWRvc1xuXG4gICAgICAgICAgY29uc29sZS5sb2coJ+KchSBSZWxhY2lvbmVzIGZhbWlsaWFyZXMgY29uc3RydWlkYXM6JywgcmVsYWNpb25lc0ZhbWlsaWFyZXMpXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfihLnvuI8gTm8gc2UgZW5jb250cmFyb24gcmVsYWNpb25lcyBmYW1pbGlhcmVzIG8gaHVibyBlcnJvcjonLCBlcnJvclJlbGFjaW9uZXMpXG4gICAgICB9XG5cbiAgICAgIC8vIENvbnN0cnVpciBlbCBvYmpldG8gY29tcGxldG8gZGVsIHVzdWFyaW9cbiAgICAgIGNvbnN0IHVzdWFyaW9Db21wbGV0bzogVXN1YXJpb0RldGFsbGFkbyA9IHtcbiAgICAgICAgLi4udXN1YXJpb0Jhc2ljbyxcbiAgICAgICAgdXN1YXJpb19yb2xlczogcm9sZXNDb21wbGV0b3MsXG4gICAgICAgIGRpcmVjY2lvbixcbiAgICAgICAgZmFtaWxpYSxcbiAgICAgICAgb2N1cGFjaW9uLFxuICAgICAgICBwcm9mZXNpb24sXG4gICAgICAgIHJlbGFjaW9uZXNfZmFtaWxpYXJlczogcmVsYWNpb25lc0ZhbWlsaWFyZXNcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ+KchSBVc3VhcmlvIGNvbXBsZXRvIGNvbnN0cnVpZG86JywgdXN1YXJpb0NvbXBsZXRvKVxuICAgICAgc2V0VXN1YXJpbyh1c3VhcmlvQ29tcGxldG8pXG5cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBpbmVzcGVyYWRvOicsIGVycilcbiAgICAgIHNldEVycm9yKCdFcnJvciBpbmVzcGVyYWRvIGFsIGNhcmdhciBkYXRvcycpXG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgfVxuICB9XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaWQpIHtcbiAgICAgIGNhcmdhclVzdWFyaW8oKVxuICAgIH1cbiAgfSwgW2lkXSlcblxuICByZXR1cm4ge1xuICAgIHVzdWFyaW8sXG4gICAgbG9hZGluZyxcbiAgICBlcnJvcixcbiAgICByZWNhcmdhcjogY2FyZ2FyVXN1YXJpb1xuICB9XG59XG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJjcmVhdGVDbGllbnQiLCJ1c2VVc3VhcmlvRGV0YWxsZSIsImlkIiwidXN1YXJpbyIsInNldFVzdWFyaW8iLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJzdXBhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImNhcmdhclVzdWFyaW8iLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsInVzdWFyaW9CYXNpY28iLCJlcnJvclVzdWFyaW8iLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJzaW5nbGUiLCJtZXNzYWdlIiwidXN1YXJpb1JvbGVzIiwiZXJyb3JSb2xlcyIsInJvbGVzQ29tcGxldG9zIiwibGVuZ3RoIiwicm9sSWRzIiwibWFwIiwidXIiLCJyb2xfaWQiLCJyb2xlc1Npc3RlbWEiLCJlcnJvclJvbGVzU2lzdGVtYSIsImluIiwidXN1YXJpb19pZCIsInJvbGVzX3Npc3RlbWEiLCJmaW5kIiwicnMiLCJkaXJlY2Npb24iLCJ1bmRlZmluZWQiLCJkaXJlY2Npb25faWQiLCJkaXJEYXRhIiwiZXJyb3JEaXIiLCJmYW1pbGlhIiwiZmFtaWxpYV9pZCIsImZhbURhdGEiLCJlcnJvckZhbSIsIm9jdXBhY2lvbiIsIm9jdXBhY2lvbl9pZCIsIm9jRGF0YSIsImVycm9yT2MiLCJwcm9mZXNpb24iLCJwcm9mZXNpb25faWQiLCJwcm9mRGF0YSIsImVycm9yUHJvZiIsInJlbGFjaW9uZXNGYW1pbGlhcmVzIiwicmVsYWNpb25lcyIsImVycm9yUmVsYWNpb25lcyIsIm9yIiwiaWRzUmVsYWNpb25hZG9zIiwiciIsImVzVXN1YXJpbzEiLCJ1c3VhcmlvMV9pZCIsImZhbWlsaWFySWQiLCJ1c3VhcmlvMl9pZCIsInRpcG9fcmVsYWNpb24iLCJ1c3Vhcmlvc0ZhbWlsaWFyZXMiLCJlcnJvclVzdWFyaW9zRmFtaWxpYXJlcyIsImZhbWlsaWFyIiwidWYiLCJyZWxhY2lvbklkIiwidGlwbyIsImVzUHJpbmNpcGFsIiwiZXNfcHJpbmNpcGFsIiwiZmFtaWxpYXJFbmNvbnRyYWRvIiwiZmFtaWxpYXJOb21icmUiLCJub21icmUiLCJhcGVsbGlkbyIsInVzdWFyaW9BY3R1YWwiLCJ1c3VhcmlvMSIsInVzdWFyaW8yIiwidGlwb1JlbGFjaW9uTW9zdHJhZG8iLCJlc191c3VhcmlvMSIsInRpcG9fcmVsYWNpb25fb3JpZ2luYWwiLCJmaWx0ZXIiLCJ1c3VhcmlvQ29tcGxldG8iLCJ1c3VhcmlvX3JvbGVzIiwicmVsYWNpb25lc19mYW1pbGlhcmVzIiwiZXJyIiwicmVjYXJnYXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-usuario-detalle.ts\n"));

/***/ })

});