"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/users/[id]/page",{

/***/ "(app-pages-browser)/./hooks/use-usuario-detalle.ts":
/*!**************************************!*\
  !*** ./hooks/use-usuario-detalle.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useUsuarioDetalle: () => (/* binding */ useUsuarioDetalle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\nfunction useUsuarioDetalle(id) {\n    const [usuario, setUsuario] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://wcnqocyqtksxhthnquta.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndjbnFvY3lxdGtzeGh0aG5xdXRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY4Mzk0NjIsImV4cCI6MjA2MjQxNTQ2Mn0.pDQP3Yx1XU1Wh3AYGSKB8qlrPz8_5_wI4IhfjjLvtZg\");\n    const cargarUsuario = async ()=>{\n        try {\n            setLoading(true);\n            setError(null);\n            // Obtener el usuario básico\n            const { data: usuarioBasico, error: errorUsuario } = await supabase.from('usuarios').select('*').eq('id', id).single();\n            if (errorUsuario) {\n                console.error('Error al obtener usuario básico:', errorUsuario);\n                setError(\"Error al cargar usuario: \".concat(errorUsuario.message));\n                return;\n            }\n            // Obtener los roles del usuario\n            const { data: usuarioRoles, error: errorRoles } = await supabase.from('usuario_roles').select('rol_id, usuario_id').eq('usuario_id', id);\n            // Obtener información de los roles del sistema\n            let rolesCompletos = [];\n            if (usuarioRoles && usuarioRoles.length > 0) {\n                const rolIds = usuarioRoles.map((ur)=>ur.rol_id);\n                const { data: rolesSistema, error: errorRolesSistema } = await supabase.from('roles_sistema').select('id, nombre_interno, nombre_visible').in('id', rolIds);\n                if (!errorRolesSistema && rolesSistema) {\n                    rolesCompletos = usuarioRoles.map((ur)=>({\n                            rol_id: ur.rol_id,\n                            usuario_id: ur.usuario_id,\n                            roles_sistema: rolesSistema.find((rs)=>rs.id === ur.rol_id)\n                        }));\n                }\n            }\n            // Obtener dirección si existe\n            let direccion = undefined;\n            if (usuarioBasico.direccion_id) {\n                const { data: dirData, error: errorDir } = await supabase.from('direcciones').select(\"\\n            *,\\n            parroquia: parroquias!direcciones_parroquia_id_fkey (\\n              id,\\n              nombre,\\n              municipio: municipios!parroquias_municipio_id_fkey (\\n                id,\\n                nombre,\\n                estado: estados!municipios_estado_id_fkey (\\n                  id,\\n                  nombre,\\n                  pais: paises!estados_pais_id_fkey (\\n                    id,\\n                    nombre\\n                  )\\n                )\\n              )\\n            )\\n          \").eq('id', usuarioBasico.direccion_id).single();\n                if (!errorDir) {\n                    direccion = dirData;\n                }\n            }\n            // Obtener familia si existe\n            let familia = undefined;\n            if (usuarioBasico.familia_id) {\n                const { data: famData, error: errorFam } = await supabase.from('familias').select('*').eq('id', usuarioBasico.familia_id).single();\n                if (!errorFam) {\n                    familia = famData;\n                }\n            }\n            // Obtener ocupación si existe\n            let ocupacion = undefined;\n            if (usuarioBasico.ocupacion_id) {\n                const { data: ocData, error: errorOc } = await supabase.from('ocupaciones').select('*').eq('id', usuarioBasico.ocupacion_id).single();\n                if (!errorOc) {\n                    ocupacion = ocData;\n                }\n            }\n            // Obtener profesión si existe\n            let profesion = undefined;\n            if (usuarioBasico.profesion_id) {\n                const { data: profData, error: errorProf } = await supabase.from('profesiones').select('*').eq('id', usuarioBasico.profesion_id).single();\n                if (!errorProf) {\n                    profesion = profData;\n                }\n            }\n            // Obtener relaciones familiares si existen\n            let relacionesFamiliares = undefined;\n            // Buscar relaciones donde este usuario es usuario1 o usuario2\n            const { data: relaciones, error: errorRelaciones } = await supabase.from('relaciones_usuarios').select('id, tipo_relacion, es_principal, usuario1_id, usuario2_id').or(\"usuario1_id.eq.\".concat(id, \",usuario2_id.eq.\").concat(id));\n            if (!errorRelaciones && relaciones && relaciones.length > 0) {\n                // Obtener los IDs de los usuarios relacionados\n                const idsRelacionados = relaciones.map((r)=>{\n                    const esUsuario1 = r.usuario1_id === id;\n                    return esUsuario1 ? r.usuario2_id : r.usuario1_id;\n                });\n                // Obtener información de los usuarios relacionados\n                const { data: usuariosFamiliares, error: errorUsuariosFamiliares } = await supabase.from('usuarios').select('*').in('id', idsRelacionados);\n                if (!errorUsuariosFamiliares && usuariosFamiliares) {\n                    relacionesFamiliares = relaciones.map((r)=>{\n                        const esUsuario1 = r.usuario1_id === id;\n                        const familiarId = esUsuario1 ? r.usuario2_id : r.usuario1_id;\n                        const familiar = usuariosFamiliares.find((uf)=>uf.id === familiarId);\n                        // Mostrar la relación tal como está en la base de datos\n                        // No invertir las relaciones\n                        return {\n                            id: r.id,\n                            tipo_relacion: r.tipo_relacion,\n                            es_principal: r.es_principal,\n                            familiar: familiar\n                        };\n                    }).filter((r)=>r.familiar);\n                }\n            }\n            // Construir el objeto completo del usuario\n            const usuarioCompleto = {\n                ...usuarioBasico,\n                usuario_roles: rolesCompletos,\n                direccion,\n                familia,\n                ocupacion,\n                profesion,\n                relaciones_familiares: relacionesFamiliares\n            };\n            setUsuario(usuarioCompleto);\n        } catch (err) {\n            console.error('Error inesperado:', err);\n            setError('Error inesperado al cargar datos');\n        } finally{\n            setLoading(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useUsuarioDetalle.useEffect\": ()=>{\n            if (id) {\n                cargarUsuario();\n            }\n        }\n    }[\"useUsuarioDetalle.useEffect\"], [\n        id\n    ]);\n    return {\n        usuario,\n        loading,\n        error,\n        recargar: cargarUsuario\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-usuario-detalle.ts\n"));

/***/ })

});